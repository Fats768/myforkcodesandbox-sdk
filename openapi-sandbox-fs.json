{
  "openapi": "3.0.0",
  "info": {
    "title": "Sandbox Rest FS API",
    "description": "FS API for interacting with sandbox",
    "version": "1.0.0"
  },
  "paths": {
    "/fs/writeFile": {
      "post": {
        "summary": "Write to a file",
        "description": "Write content to a file at the specified path",
        "operationId": "writeFile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error writing file",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/read": {
      "post": {
        "summary": "Read file system",
        "description": "Retrieve the latest snapshot of the server's MemoryFS file and children list",
        "operationId": "fsRead",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSReadResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error reading file system",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/operation": {
      "post": {
        "summary": "Perform file system operation",
        "description": "Send a tree operation reflecting filesystem operations",
        "operationId": "fsOperation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSOperationResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error performing operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/search": {
      "post": {
        "summary": "Search files",
        "description": "Search for content in files",
        "operationId": "fsSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSSearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SearchResult"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error searching files",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/streamingSearch": {
      "post": {
        "summary": "Start streaming search",
        "description": "Start a streaming search for content in files",
        "operationId": "fsStreamingSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSStreamingSearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "searchId": {
                              "type": "string",
                              "description": "ID of the search operation"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error starting streaming search",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/cancelStreamingSearch": {
      "post": {
        "summary": "Cancel streaming search",
        "description": "Cancel an ongoing streaming search",
        "operationId": "fsCancelStreamingSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searchId": {
                    "type": "string",
                    "description": "ID of the search to cancel"
                  }
                },
                "required": ["searchId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "searchId": {
                              "type": "string",
                              "description": "ID of the cancelled search"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error cancelling search",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/pathSearch": {
      "post": {
        "summary": "Search file paths",
        "description": "Search for file paths matching a pattern",
        "operationId": "fsPathSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PathSearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/PathSearchResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error searching paths",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/upload": {
      "post": {
        "summary": "Upload file",
        "description": "Upload a file to the specified parent directory",
        "operationId": "fsUpload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentId": {
                    "type": "string",
                    "description": "ID of the parent directory"
                  },
                  "filename": {
                    "type": "string",
                    "description": "Name of the file to create"
                  },
                  "content": {
                    "type": "string",
                    "format": "binary",
                    "description": "File content as binary data"
                  }
                },
                "required": ["parentId", "filename", "content"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "fileId": {
                              "type": "string",
                              "description": "ID of the created file"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error uploading file",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/InvalidIdError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/download": {
      "post": {
        "summary": "Download files",
        "description": "Download files at a specified path as a zip",
        "operationId": "fsDownload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to download"
                  },
                  "excludes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Glob patterns of files/folders to exclude from the download"
                  }
                },
                "required": ["path"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "downloadUrl": {
                              "type": "string",
                              "description": "URL to download the files from"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error creating download",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "$ref": "#/components/schemas/DefaultError"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/readFile": {
      "post": {
        "summary": "Read file content",
        "description": "Read the content of a file at the specified path",
        "operationId": "fsReadFile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSReadFileParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSReadFileResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error reading file",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/readdir": {
      "post": {
        "summary": "Read directory contents",
        "description": "List the contents of a directory at the specified path",
        "operationId": "fsReadDir",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSReadDirParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSReadDirResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error reading directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/stat": {
      "post": {
        "summary": "Get file/directory stats",
        "description": "Get stats for a file or directory at the specified path",
        "operationId": "fsStat",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSStatParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSStatResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error getting stats",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/copy": {
      "post": {
        "summary": "Copy file/directory",
        "description": "Copy a file or directory from one location to another",
        "operationId": "fsCopy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSCopyParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error copying file/directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/rename": {
      "post": {
        "summary": "Rename file/directory",
        "description": "Rename a file or directory (move from one location to another)",
        "operationId": "fsRename",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSRenameParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error renaming file/directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/remove": {
      "post": {
        "summary": "Remove file/directory",
        "description": "Delete a file or directory at the specified path",
        "operationId": "fsRemove",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSRemoveParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error removing file/directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/mkdir": {
      "post": {
        "summary": "Create directory",
        "description": "Create a new directory at the specified path",
        "operationId": "fsMkdir",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSMkdirParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error creating directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/watch": {
      "post": {
        "summary": "Watch file/directory",
        "description": "Watch a file or directory for changes",
        "operationId": "fsWatch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSWatchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/FSWatchResult"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error watching file/directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fs/unwatch": {
      "post": {
        "summary": "Stop watching file/directory",
        "description": "Stop watching a file or directory for changes",
        "operationId": "fsUnwatch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FSUnwatchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error unwatching file/directory",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "enum": [0],
            "description": "Status code for successful operations"
          },
          "result": {
            "type": "object",
            "description": "Result payload for the operation"
          }
        },
        "required": ["status", "result"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "enum": [1],
            "description": "Status code for error operations"
          },
          "error": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultError"
              },
              {
                "$ref": "#/components/schemas/RawFsError"
              }
            ],
            "discriminator": {
              "propertyName": "code"
            }
          }
        },
        "required": ["status", "error"]
      },
      "DefaultError": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/PitcherErrorCode",
            "description": "Error code identifying the type of error"
          },
          "data": {
            "type": "object",
            "description": "Additional error details",
            "nullable": true
          },
          "publicMessage": {
            "type": "string",
            "description": "Human-readable error message that can be displayed to users",
            "nullable": true
          }
        },
        "required": ["code"]
      },
      "RawFsError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "enum": [102],
            "description": "RAWFS_ERROR code"
          },
          "data": {
            "type": "object",
            "properties": {
              "errno": {
                "type": ["number", "null"],
                "description": "File system error number, or null if not available"
              }
            },
            "required": ["errno"]
          },
          "publicMessage": {
            "type": "string",
            "description": "Human-readable error message that can be displayed to users",
            "nullable": true
          }
        },
        "required": ["code", "data"]
      },
      "PitcherErrorCode": {
        "type": "integer",
        "description": "Enumeration of error codes",
        "enum": [
          0, 1, 2, 3, 100, 101, 102, 200, 201, 204, 300, 400, 404, 410, 420,
          430, 440, 450, 460, 470, 500, 600, 601, 602, 704, 800, 801, 802, 803,
          814
        ],
        "x-enum-descriptions": [
          "CRITICAL_ERROR",
          "FEATURE_UNAVAILABLE",
          "NO_ACCESS",
          "RATE_LIMIT",
          "INVALID_ID",
          "INVALID_PATH",
          "RAWFS_ERROR",
          "SHELL_NOT_ACCESSIBLE",
          "SHELL_CLOSED",
          "SHELL_NOT_FOUND",
          "MODEL_NOT_FOUND",
          "GIT_OPERATION_IN_PROGRESS",
          "GIT_REMOTE_FILE_NOT_FOUND",
          "GIT_FETCH_FAIL",
          "GIT_PULL_CONFLICT",
          "GIT_RESET_LOCAL_REMOTE_ERROR",
          "GIT_PUSH_FAIL",
          "GIT_RESET_CHECKOUT_INITIAL_BRANCH_FAIL",
          "GIT_PULL_FAIL",
          "GIT_TRANSPOSE_LINES_FAIL",
          "CHANNEL_NOT_FOUND",
          "CONFIG_FILE_ALREADY_EXISTS",
          "TASK_NOT_FOUND",
          "COMMAND_ALREADY_CONFIGURED",
          "COMMAND_NOT_FOUND",
          "AI_NOT_AVAILABLE",
          "PROMPT_TOO_BIG",
          "FAILED_TO_RESPOND",
          "AI_TOO_FREQUENT_REQUESTS",
          "AI_CHAT_NOT_FOUND"
        ]
      },
      "WriteFileRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "File path to write to"
          },
          "content": {
            "type": "string",
            "format": "binary",
            "description": "File content as binary data (Uint8Array)"
          },
          "create": {
            "type": "boolean",
            "description": "Whether to create the file if it doesn't exist",
            "default": false
          },
          "overwrite": {
            "type": "boolean",
            "description": "Whether to overwrite the file if it exists",
            "default": false
          }
        },
        "required": ["path", "content"]
      },
      "FSReadResult": {
        "type": "object",
        "properties": {
          "treeNodes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "JSON representation of a node in the file system"
            }
          },
          "clock": {
            "type": "number",
            "description": "Current clock value for the file system"
          }
        },
        "required": ["treeNodes", "clock"]
      },
      "FSOperationRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/FSOperation"
          }
        },
        "required": ["operation"]
      },
      "FSOperation": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FSCreateOperation"
          },
          {
            "$ref": "#/components/schemas/FSDeleteOperation"
          },
          {
            "$ref": "#/components/schemas/FSMoveOperation"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "FSCreateOperation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["create"]
          },
          "parentId": {
            "type": "string",
            "description": "ID of the parent directory"
          },
          "newEntry": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the new entry"
              },
              "type": {
                "type": "string",
                "enum": ["directory", "file"],
                "description": "Type of the node"
              },
              "name": {
                "type": "string",
                "description": "Name of the new entry"
              }
            },
            "required": ["id", "type", "name"]
          }
        },
        "required": ["type", "parentId", "newEntry"]
      },
      "FSDeleteOperation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["delete"]
          },
          "id": {
            "type": "string",
            "description": "ID of the entry to delete"
          }
        },
        "required": ["type", "id"]
      },
      "FSMoveOperation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["move"]
          },
          "id": {
            "type": "string",
            "description": "ID of the entry to move"
          },
          "parentId": {
            "type": "string",
            "description": "ID of the new parent directory",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "New name for the entry",
            "nullable": true
          }
        },
        "required": ["type", "id"]
      },
      "FSOperationResult": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "enum": [0],
                "description": "Success code"
              },
              "clock": {
                "type": "number",
                "description": "Current clock value"
              }
            },
            "required": ["code", "clock"]
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "enum": [1],
                "description": "Ignored code"
              }
            },
            "required": ["code"]
          }
        ],
        "discriminator": {
          "propertyName": "code"
        }
      },
      "FSSearchParams": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text to search for"
          },
          "glob": {
            "type": "string",
            "description": "Glob pattern to filter files",
            "nullable": true
          },
          "isRegex": {
            "type": "boolean",
            "description": "Whether to treat the search text as a regular expression",
            "nullable": true
          },
          "caseSensitivity": {
            "type": "string",
            "enum": ["smart", "enabled", "disabled"],
            "description": "Case sensitivity setting for the search",
            "nullable": true
          }
        },
        "required": ["text"]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "description": "ID of the file containing the match"
          },
          "lines": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Text of the line containing the match"
              }
            },
            "required": ["text"]
          },
          "lineNumber": {
            "type": "integer",
            "description": "Line number of the match"
          },
          "absoluteOffset": {
            "type": "integer",
            "description": "Absolute offset of the match in the file"
          },
          "submatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchSubMatch"
            }
          }
        },
        "required": [
          "fileId",
          "lines",
          "lineNumber",
          "absoluteOffset",
          "submatches"
        ]
      },
      "SearchSubMatch": {
        "type": "object",
        "properties": {
          "match": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Matched text"
              }
            },
            "required": ["text"]
          },
          "start": {
            "type": "integer",
            "description": "Start position of the match"
          },
          "end": {
            "type": "integer",
            "description": "End position of the match"
          }
        },
        "required": ["match", "start", "end"]
      },
      "FSStreamingSearchParams": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string",
            "description": "ID for the search operation"
          },
          "text": {
            "type": "string",
            "description": "Text to search for"
          },
          "glob": {
            "type": "string",
            "description": "Glob pattern to filter files",
            "nullable": true
          },
          "isRegex": {
            "type": "boolean",
            "description": "Whether to treat the search text as a regular expression",
            "nullable": true
          },
          "caseSensitivity": {
            "type": "string",
            "enum": ["smart", "enabled", "disabled"],
            "description": "Case sensitivity setting for the search",
            "nullable": true
          },
          "maxResults": {
            "type": "integer",
            "description": "Maximum number of results to return (default: 10,000)",
            "nullable": true
          }
        },
        "required": ["searchId", "text"]
      },
      "PathSearchParams": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text to search for in file paths"
          }
        },
        "required": ["text"]
      },
      "PathSearchResult": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathSearchMatch"
            }
          }
        },
        "required": ["matches"]
      },
      "PathSearchMatch": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path that matched the search"
          },
          "submatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchSubMatch"
            }
          }
        },
        "required": ["path", "submatches"]
      },
      "InvalidIdError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "enum": [100],
            "description": "INVALID_ID error code"
          }
        },
        "required": ["code"]
      },
      "FSReadFileParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file to read"
          }
        },
        "required": ["path"]
      },
      "FSReadFileResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "binary",
            "description": "File content as binary data"
          }
        },
        "required": ["content"]
      },
      "FSReadDirParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the directory to read"
          }
        },
        "required": ["path"]
      },
      "FSReadDirResult": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the entry"
                },
                "type": {
                  "type": "string",
                  "enum": ["directory", "file"],
                  "description": "Type of the entry"
                },
                "isSymlink": {
                  "type": "boolean",
                  "description": "Whether the entry is a symlink"
                }
              },
              "required": ["name", "type", "isSymlink"]
            }
          }
        },
        "required": ["entries"]
      },
      "FSStatParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file or directory to stat"
          }
        },
        "required": ["path"]
      },
      "FSStatResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["directory", "file"],
            "description": "Type of the entry"
          },
          "isSymlink": {
            "type": "boolean",
            "description": "Whether the entry is a symlink"
          },
          "size": {
            "type": "integer",
            "description": "Size of the file in bytes"
          },
          "mtime": {
            "type": "integer",
            "description": "Last modified time"
          },
          "ctime": {
            "type": "integer",
            "description": "Creation time"
          },
          "atime": {
            "type": "integer",
            "description": "Last accessed time"
          }
        },
        "required": ["type", "isSymlink", "size", "mtime", "ctime", "atime"]
      },
      "FSCopyParams": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Path to copy from"
          },
          "to": {
            "type": "string",
            "description": "Path to copy to"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to copy directories recursively",
            "nullable": true
          },
          "overwrite": {
            "type": "boolean",
            "description": "Whether to overwrite existing files",
            "nullable": true
          }
        },
        "required": ["from", "to"]
      },
      "FSRenameParams": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Path to rename from"
          },
          "to": {
            "type": "string",
            "description": "Path to rename to"
          },
          "overwrite": {
            "type": "boolean",
            "description": "Whether to overwrite existing files",
            "nullable": true
          }
        },
        "required": ["from", "to"]
      },
      "FSRemoveParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to remove"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to remove directories recursively",
            "nullable": true
          }
        },
        "required": ["path"]
      },
      "FSMkdirParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to create directory at"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to create parent directories if they don't exist",
            "nullable": true
          }
        },
        "required": ["path"]
      },
      "FSWatchParams": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to watch"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to watch directories recursively",
            "nullable": true
          },
          "excludes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Glob patterns to exclude from watching",
            "nullable": true
          }
        },
        "required": ["path"]
      },
      "FSWatchResult": {
        "type": "object",
        "properties": {
          "watchId": {
            "type": "string",
            "description": "ID of the watch"
          }
        },
        "required": ["watchId"]
      },
      "FSUnwatchParams": {
        "type": "object",
        "properties": {
          "watchId": {
            "type": "string",
            "description": "ID of the watch to stop"
          }
        },
        "required": ["watchId"]
      }
    }
  }
}

{
  "openapi": "3.0.0",
  "info": {
    "title": "Sandbox API",
    "description": "API for interacting with sandbox",
    "version": "1.0.0"
  },
  "paths": {
    "/fs/writefile": {
      "post": {
        "summary": "Write to a file",
        "description": "Write content to a file at the specified path",
        "operationId": "writeFile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error writing file",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/DefaultError"
                            },
                            {
                              "$ref": "#/components/schemas/RawFsError"
                            }
                          ],
                          "discriminator": {
                            "propertyName": "code"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "enum": [0],
            "description": "Status code for successful operations"
          },
          "result": {
            "type": "object",
            "description": "Result payload for the operation"
          }
        },
        "required": ["status", "result"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "enum": [1],
            "description": "Status code for error operations"
          },
          "error": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DefaultError"
              },
              {
                "$ref": "#/components/schemas/RawFsError"
              }
            ],
            "discriminator": {
              "propertyName": "code"
            }
          }
        },
        "required": ["status", "error"]
      },
      "DefaultError": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/PitcherErrorCode",
            "description": "Error code identifying the type of error"
          },
          "data": {
            "type": "object",
            "description": "Additional error details",
            "nullable": true
          },
          "publicMessage": {
            "type": "string",
            "description": "Human-readable error message that can be displayed to users",
            "nullable": true
          }
        },
        "required": ["code"]
      },
      "RawFsError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "enum": [102],
            "description": "RAWFS_ERROR code"
          },
          "data": {
            "type": "object",
            "properties": {
              "errno": {
                "type": ["number", "null"],
                "description": "File system error number, or null if not available"
              }
            },
            "required": ["errno"]
          },
          "publicMessage": {
            "type": "string",
            "description": "Human-readable error message that can be displayed to users",
            "nullable": true
          }
        },
        "required": ["code", "data"]
      },
      "PitcherErrorCode": {
        "type": "integer",
        "description": "Enumeration of error codes",
        "enum": [
          0, 1, 2, 3, 100, 101, 102, 200, 201, 204, 300, 400, 404, 410, 420,
          430, 440, 450, 460, 470, 500, 600, 601, 602, 704, 800, 801, 802, 803,
          814
        ],
        "x-enum-descriptions": [
          "CRITICAL_ERROR",
          "FEATURE_UNAVAILABLE",
          "NO_ACCESS",
          "RATE_LIMIT",
          "INVALID_ID",
          "INVALID_PATH",
          "RAWFS_ERROR",
          "SHELL_NOT_ACCESSIBLE",
          "SHELL_CLOSED",
          "SHELL_NOT_FOUND",
          "MODEL_NOT_FOUND",
          "GIT_OPERATION_IN_PROGRESS",
          "GIT_REMOTE_FILE_NOT_FOUND",
          "GIT_FETCH_FAIL",
          "GIT_PULL_CONFLICT",
          "GIT_RESET_LOCAL_REMOTE_ERROR",
          "GIT_PUSH_FAIL",
          "GIT_RESET_CHECKOUT_INITIAL_BRANCH_FAIL",
          "GIT_PULL_FAIL",
          "GIT_TRANSPOSE_LINES_FAIL",
          "CHANNEL_NOT_FOUND",
          "CONFIG_FILE_ALREADY_EXISTS",
          "TASK_NOT_FOUND",
          "COMMAND_ALREADY_CONFIGURED",
          "COMMAND_NOT_FOUND",
          "AI_NOT_AVAILABLE",
          "PROMPT_TOO_BIG",
          "FAILED_TO_RESPOND",
          "AI_TOO_FREQUENT_REQUESTS",
          "AI_CHAT_NOT_FOUND"
        ]
      },
      "WriteFileRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "File path to write to"
          },
          "content": {
            "type": "string",
            "format": "binary",
            "description": "File content as binary data (Uint8Array)"
          },
          "create": {
            "type": "boolean",
            "description": "Whether to create the file if it doesn't exist",
            "default": false
          },
          "overwrite": {
            "type": "boolean",
            "description": "Whether to overwrite the file if it exists",
            "default": false
          }
        },
        "required": ["path", "content"]
      }
    }
  }
}
